/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appqlks;

import static appqlks.NewMain.dtm;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abmsk
 */
public class QuanLi extends javax.swing.JFrame {
static DefaultTableModel dtm;
    /**
     * Creates new form QuanLi
     */
    public QuanLi() {
        initComponents();
        this.setLocationRelativeTo(this);
        loadComboBoxMHP();
        TablePhong.getTableHeader().setFont(new Font("Segoe UI",Font.BOLD,13));
        TablePhong.getTableHeader().setOpaque(false);
        TablePhong.getTableHeader().setBackground(new Color(32,136,203));
        TablePhong.getTableHeader().setForeground(new Color(255,255,255));
        layPhong();
    }
private void layPhong() {
    
        DefaultTableModel dtm = (DefaultTableModel) TablePhong.getModel();
        dtm.setNumRows(0);
        Connection ketNoi = AppQLKS.layKetNoi();
       
        String sql = "select * from PHONG ";
        Vector vt;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                vt = new Vector();
                vt.add(rs.getString("maphong"));
                vt.add(rs.getString("trangthai"));
                vt.add(rs.getString("maHP"));
                vt.add(rs.getString("sl_khach_max"));
                dtm.addRow(vt);
            }
            TablePhong.setModel(dtm);
            rs.close();
            ps.close();
            ketNoi.close();
        } catch (SQLException ex) {
            Logger.getLogger(NewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePhong = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        soluong = new javax.swing.JTextField();
        trangthai = new javax.swing.JComboBox<>();
        mahangphong = new javax.swing.JComboBox<>();
        maphong = new javax.swing.JTextField();
        luu = new rojeru_san.RSButton();
        xoa = new rojeru_san.RSButton();
        thongbaophong = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/oil.png"))); // NOI18N
        jLabel2.setText("QUẢN LÍ PHÒNG");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 70));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 110));

        TablePhong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        TablePhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Trạng Thái", "Mã Hạng Phòng", "Số Lượng Khách"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablePhong.setFocusable(false);
        TablePhong.setIntercellSpacing(new java.awt.Dimension(0, 0));
        TablePhong.setRowHeight(25);
        TablePhong.setSelectionBackground(new java.awt.Color(183, 221, 251));
        TablePhong.setShowVerticalLines(false);
        TablePhong.getTableHeader().setReorderingAllowed(false);
        TablePhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablePhongMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(TablePhong);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 770, 560));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Mã Phòng");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Trạng Thái");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 250, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mã Hạng Phòng");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 350, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Số Lượng Khách");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 450, -1, -1));

        soluong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel1.add(soluong, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 440, 150, 40));

        trangthai.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        trangthai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        jPanel1.add(trangthai, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 240, 150, 40));

        mahangphong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel1.add(mahangphong, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 340, 150, 40));

        maphong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jPanel1.add(maphong, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 140, 150, 40));

        luu.setBackground(new java.awt.Color(102, 102, 102));
        luu.setText("LƯU");
        luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuActionPerformed(evt);
            }
        });
        jPanel1.add(luu, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 580, -1, -1));

        xoa.setBackground(new java.awt.Color(153, 153, 153));
        xoa.setText("XÓA");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });
        jPanel1.add(xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 640, -1, -1));

        thongbaophong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(thongbaophong, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 520, 260, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   public void loadComboBoxMHP()
    {
        Connection ketNoi = AppQLKS.layKetNoi();
        String query = "SELECT DISTINCT maHP FROM HANGPHONG";
        try
        {
            Statement sta = ketNoi.createStatement();
            ResultSet ketQua = sta.executeQuery(query);
            while(ketQua.next())
            {
                
                mahangphong.addItem(ketQua.getString("maHP"));                
            }            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    } 
    private void TablePhongMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablePhongMousePressed
        dtm = (DefaultTableModel) TablePhong.getModel(); 
        int i = TablePhong.getSelectedRow();
        maphong.setText(dtm.getValueAt(i, 0).toString());       
        trangthai.setSelectedItem(dtm.getValueAt(i, 1).toString());
        mahangphong.setSelectedItem(dtm.getValueAt(i, 2).toString());
        soluong.setText(dtm.getValueAt(i,3).toString()); 
    }//GEN-LAST:event_TablePhongMousePressed
private void Luu(String MP,String TT,String MHP,String SL) {
        Connection ketNoi = AppQLKS.layKetNoi();
        String sql = "insert into PHONG values (?,?,?,?) ";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, MP);
            ps.setString(2, TT);
            ps.setString(3, MHP);
            ps.setString(4, SL);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(NewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
private int kiemTraP(String MP) {
        Connection ketNoi = AppQLKS.layKetNoi();
        int tonTai = 0;
        String sql = "select * from PHONG where maphong ='" + MP + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                tonTai = 1;
            }
            rs.close();
            ps.close();
            ketNoi.close();
        }
        catch (SQLException ex) {
            Logger.getLogger(NewMain.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        return tonTai;
    }
    private void SuaPhong(String MP) {
        Connection ketNoi = AppQLKS.layKetNoi();
        
        String sql = "update PHONG set trangthai='"+(String)trangthai.getSelectedItem()+"',maHP='"+(String)mahangphong.getSelectedItem()+"',sl_khach_max='"+soluong.getText()+"'where maphong='"+MP+"'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(NewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   private void xoaPhong(String MP) {
        Connection ketNoi = AppQLKS.layKetNoi();
        String sql = "delete from PHONG where maphong = ?";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, MP);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(NewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void luuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuActionPerformed
        String MP=maphong.getText();
        String SL=soluong.getText();
        String TT=(String)trangthai.getSelectedItem();
        String MHP=(String)mahangphong.getSelectedItem();
        int temp0=0,temp1=0;
        int check=kiemTraP(MP);
        
        if(MP.equals("")){
                temp0=1;
             thongbaophong.setForeground(Color.RED);
             thongbaophong.setText("Mã Phòng Không Được Bỏ Trống ");
        }
        else if(SL.equals("")){
            temp1=1;
             thongbaophong.setForeground(Color.RED);
             thongbaophong.setText("Số Lượng Không Được Bỏ Trống ");
        }
    
        else if(temp0!=1 &&temp1!=1 ){   
            if(check==1){
                SuaPhong(MP);
                 layPhong();
                 thongbaophong.setForeground(Color.BLUE);
             thongbaophong.setText("Sửa Thành Công ");
            }
            else{
                Luu(MP,TT,MHP,SL);
                 thongbaophong.setForeground(Color.BLUE);
                 thongbaophong.setText("Lưu Thành Công ");
                layPhong();
            }  
        }
    }//GEN-LAST:event_luuActionPerformed

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
          String MP =maphong.getText();
        int check;
        int kiemTra = 0;  
        if (MP.equals("")) {
            kiemTra = 1;
            JOptionPane.showMessageDialog(this, "Hãy nhập Phòng  bạn muốn xóa");
        }
        else if (kiemTra != 1) {
            check = kiemTraP(MP);
            if (check == 1) {

                int ret = JOptionPane.showConfirmDialog(this, "Bạn Chắc Chắn Muốn Xóa?", "Xác Nhận", 0);
                if(ret == JOptionPane.CANCEL_OPTION)
                return;
                else  if(ret == JOptionPane.OK_OPTION)
                {
                    xoaPhong(MP);
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                    this.layPhong();

                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Phòng Chưa Có");
            }
        }
    }//GEN-LAST:event_xoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePhong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private rojeru_san.RSButton luu;
    private javax.swing.JComboBox<String> mahangphong;
    private javax.swing.JTextField maphong;
    private javax.swing.JTextField soluong;
    private javax.swing.JLabel thongbaophong;
    private javax.swing.JComboBox<String> trangthai;
    private rojeru_san.RSButton xoa;
    // End of variables declaration//GEN-END:variables
}
